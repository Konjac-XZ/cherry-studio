appId: com.kangfenmao.CherryStudio
productName: Cherry Studio
electronLanguages:
  - zh-CN
  - zh-TW
  - en-US
  - ja # macOS/linux/win
  - ru # macOS/linux/win
  - zh_CN # for macOS
  - zh_TW # for macOS
  - en # for macOS
directories:
  buildResources: build

protocols:
  - name: Cherry Studio
    schemes:
      - cherrystudio
files:
  - "**/*"
  - "!**/{.vscode,.yarn,.yarn-lock,.github,.cursorrules,.prettierrc}"
  - "!electron.vite.config.{js,ts,mjs,cjs}}"
  - "!**/{.eslintignore,.eslintrc.js,.eslintrc.json,.eslintcache,root.eslint.config.js,eslint.config.js,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,eslint.config.mjs,dev-app-update.yml,CHANGELOG.md,README.md,biome.jsonc}"
  - "!**/{.env,.env.*,.npmrc,pnpm-lock.yaml}"
  - "!**/{tsconfig.json,tsconfig.tsbuildinfo,tsconfig.node.json,tsconfig.web.json}"
  - "!**/{.editorconfig,.jekyll-metadata}"
  - "!src"
  - "!scripts"
  - "!local"
  - "!docs"
  - "!packages"
  - "!.swc"
  - "!.bin"
  - "!._*"
  - "!*.log"
  - "!stats.html"
  - "!*.md"
  - "!**/*.{iml,o,hprof,orig,pyc,pyo,rbc,swp,csproj,sln,xproj}"
  - "!**/*.{map,ts,tsx,jsx,less,scss,sass,css.d.ts,d.cts,d.mts,md,markdown,yaml,yml}"
  - "!**/{test,tests,__tests__,powered-test,coverage}/**"
  - "!**/{example,examples}/**"
  - "!**/*.{spec,test}.{js,jsx,ts,tsx}"
  - "!**/*.min.*.map"
  - "!**/*.d.ts"
  - "!**/dist/es6/**"
  - "!**/dist/demo/**"
  - "!**/amd/**"
  - "!**/{.DS_Store,Thumbs.db,thumbs.db,__pycache__}"
  - "!**/{LICENSE,license,LICENSE.*,*.LICENSE.txt,NOTICE.txt,README.md,readme.md,CHANGELOG.md}"
  - "!node_modules/rollup-plugin-visualizer"
  - "!node_modules/js-tiktoken"
  - "!node_modules/@tavily/core/node_modules/js-tiktoken"
  - "!node_modules/pdf-parse/lib/pdf.js/{v1.9.426,v1.10.88,v2.0.550}"
  - "!node_modules/mammoth/{mammoth.browser.js,mammoth.browser.min.js}"
  - "!node_modules/selection-hook/prebuilds/**/*" # we rebuild .node, don't use prebuilds
  - "!node_modules/selection-hook/node_modules" # we don't need what in the node_modules dir
  - "!node_modules/selection-hook/src" # we don't need source files
  - "!node_modules/tesseract.js-core/{tesseract-core.js,tesseract-core.wasm,tesseract-core.wasm.js}" # we don't need source files
  - "!node_modules/tesseract.js-core/{tesseract-core-lstm.js,tesseract-core-lstm.wasm,tesseract-core-lstm.wasm.js}" # we don't need source files
  - "!node_modules/tesseract.js-core/{tesseract-core-simd-lstm.js,tesseract-core-simd-lstm.wasm,tesseract-core-simd-lstm.wasm.js}" # we don't need source files
  - "!**/*.{h,iobj,ipdb,tlog,recipe,vcxproj,vcxproj.filters,Makefile,*.Makefile}" # filter .node build files
asarUnpack:
  - resources/**
  - "**/*.{metal,exp,lib}"
  - "node_modules/@img/sharp-libvips-*/**"
win:
  executableName: Cherry Studio
  artifactName: ${productName}-${version}-${arch}-setup.${ext}
  target:
    - target: nsis
    - target: portable
  signtoolOptions:
    sign: scripts/win-sign.js
  verifyUpdateCodeSignature: false
nsis:
  artifactName: ${productName}-${version}-${arch}-setup.${ext}
  shortcutName: ${productName}
  uninstallDisplayName: ${productName}
  createDesktopShortcut: always
  allowToChangeInstallationDirectory: true
  oneClick: false
  include: build/nsis-installer.nsh
  buildUniversalInstaller: false
portable:
  artifactName: ${productName}-${version}-${arch}-portable.${ext}
  buildUniversalInstaller: false
mac:
  entitlementsInherit: build/entitlements.mac.plist
  notarize: false
  artifactName: ${productName}-${version}-${arch}.${ext}
  minimumSystemVersion: "20.1.0" # 最低支持 macOS 11.0
  extendInfo:
    - NSCameraUsageDescription: Application requests access to the device's camera.
    - NSMicrophoneUsageDescription: Application requests access to the device's microphone.
    - NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.
    - NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.
  target:
    - target: dmg
    - target: zip
linux:
  artifactName: ${productName}-${version}-${arch}.${ext}
  target:
    - target: AppImage
    - target: deb
    - target: rpm
  maintainer: electronjs.org
  category: Utility
  desktop:
    entry:
      StartupWMClass: CherryStudio
  mimeTypes:
    - x-scheme-handler/cherrystudio
rpm:
  # Workaround for electron build issue on rpm package:
  # https://github.com/electron/forge/issues/3594
  fpm: ["--rpm-rpmbuild-define=_build_id_links none"]
publish:
  provider: generic
  url: https://releases.cherry-ai.com
electronDownload:
  mirror: https://npmmirror.com/mirrors/electron/
beforePack: scripts/before-pack.js
afterPack: scripts/after-pack.js
afterSign: scripts/notarize.js
artifactBuildCompleted: scripts/artifact-build-completed.js
releaseInfo:
  releaseNotes: |
    <!--LANG:en-->
    🚀 New Features:
    - Refactored AI core engine for more efficient and stable content generation
    - Added support for multiple AI model providers: CherryIN, AiOnly
    - Added API server functionality for external application integration
    - Added PaddleOCR document recognition for enhanced document processing
    - Added Anthropic OAuth authentication support
    - Added data storage space limit notifications
    - Added font settings for global and code fonts customization
    - Added auto-copy feature after translation completion
    - Added keyboard shortcuts: rename topic, edit last message, etc.
    - Added text attachment preview for viewing file contents in messages
    - Added custom window control buttons (minimize, maximize, close)
    - Support for Qwen long-text (qwen-long) and document analysis (qwen-doc) models with native file uploads
    - Support for Qwen image recognition models (Qwen-Image)
    - Added iFlow CLI support
    - Converted knowledge base and web search to tool-calling approach for better flexibility

    🎨 UI Improvements & Bug Fixes:
    - Integrated HeroUI and Tailwind CSS framework
    - Optimized message notification styles with unified toast component
    - Moved free models to bottom with fixed position for easier access
    - Refactored quick panel and input bar tools for smoother operation
    - Optimized responsive design for navbar and sidebar
    - Improved scrollbar component with horizontal scrolling support
    - Fixed multiple translation issues: paste handling, file processing, state management
    - Various UI optimizations and bug fixes
    <!--LANG:zh-CN-->
    🚀 新功能：
    - 重构 AI 核心引擎，提供更高效稳定的内容生成
    - 新增多个 AI 模型提供商支持：CherryIN、AiOnly
    - 新增 API 服务器功能，支持外部应用集成
    - 新增 PaddleOCR 文档识别，增强文档处理能力
    - 新增 Anthropic OAuth 认证支持
    - 新增数据存储空间限制提醒
    - 新增字体设置，支持全局字体和代码字体自定义
    - 新增翻译完成后自动复制功能
    - 新增键盘快捷键：重命名主题、编辑最后一条消息等
    - 新增文本附件预览，可查看消息中的文件内容
    - 新增自定义窗口控制按钮（最小化、最大化、关闭）
    - 支持通义千问长文本（qwen-long）和文档分析（qwen-doc）模型，原生文件上传
    - 支持通义千问图像识别模型（Qwen-Image）
    - 新增 iFlow CLI 支持
    - 知识库和网页搜索转换为工具调用方式，提升灵活性

    🎨 界面改进与问题修复：
    - 集成 HeroUI 和 Tailwind CSS 框架
    - 优化消息通知样式，统一 toast 组件
    - 免费模型移至底部固定位置，便于访问
    - 重构快捷面板和输入栏工具，操作更流畅
    - 优化导航栏和侧边栏响应式设计
    - 改进滚动条组件，支持水平滚动
    - 修复多个翻译问题：粘贴处理、文件处理、状态管理
    - 各种界面优化和问题修复
    <!--LANG:END-->

